# 📚 Tableau予測完全用語集：新人エンジニアのための技術辞典

新人エンジニアがTableau予測を学ぶ際に遭遇する用語を、実践的な観点から解説します。単なる定義ではなく、「実際にどう使うか」「なぜ重要か」も含めて説明しています。

## 🎯 用語集の使い方

- 📖 **基本用語**：必ず理解すべき重要概念
- 🔧 **技術用語**：実装で必要な技術的知識
- 📊 **統計用語**：予測精度向上に必要な統計概念
- 💼 **ビジネス用語**：ステークホルダーとのコミュニケーションで重要

---

## 🔤 A

### 📖 ARIMA（エーリマ）
**Auto-Regressive Integrated Moving Average**

**定義：** 時系列データの予測に使われる統計モデルの一つ

**技術的詳細：**
```
ARIMA(p,d,q)
p: 自己回帰項数（ARの次数）
d: 差分回数（Iの次数）  
q: 移動平均項数（MAの次数）
```

**実務での使用例：**
- 季節性のないトレンドデータの予測
- 日次売上の短期予測（1-30日）
- 在庫管理での需要予測

**Tableauでの扱い：**
Tableauの自動予測で内部的に使用される場合がある（ユーザーが直接設定することは少ない）

### 🔧 API（Application Programming Interface）
**定義：** アプリケーション間でデータをやり取りするためのインターフェース

**Tableau予測での活用：**
- Tableau REST API：予測結果の自動取得
- Tableau Server API：ワークブックの自動更新
- 外部データ取得API：リアルタイムデータの連携

**実装例：**
```python
# Tableau REST APIで予測データを取得
response = requests.get(f"{server_url}/api/3.9/sites/{site_id}/views/{view_id}/data")
```

---

## 🔤 B

### 📊 Baseline（ベースライン）
**定義：** 予測モデルの性能を評価するための基準となる単純なモデル

**一般的なベースライン：**
- **前期同値法**：前月の値をそのまま次月の予測とする
- **移動平均法**：過去3ヶ月の平均を次月の予測とする
- **前年同期法**：前年同月の値を予測とする

**重要性：**
複雑なモデルを作る前に、シンプルなベースラインで予測精度を確認することで、モデルの有効性を判断できる

### 💼 Business Intelligence（BI）
**定義：** 企業のデータを分析し、意思決定を支援するシステムや手法

**Tableau予測との関係：**
- 予測結果をダッシュボードで可視化
- 経営陣への報告資料作成
- KPI監視とアラート機能

---

## 🔤 C

### 📊 Confidence Interval（信頼区間）
**定義：** 予測値の不確実性を表す区間

**技術的解説：**
```
95%信頼区間の意味：
「同じ条件で100回予測を行った場合、
95回はこの区間内に実際の値が入る」

≠「95%の確率で当たる」（よくある誤解）
```

**Tableauでの表示：**
- 予測線の周りのグレーの帯
- 上限・下限の数値
- 設定可能な信頼レベル（80%, 90%, 95%）

**ビジネスでの活用：**
- リスク管理：最悪・最良シナリオの把握
- 在庫計画：信頼区間上限での発注計画
- 予算策定：保守的・楽観的見積もり

### 🔧 Custom SQL（カスタムSQL）
**定義：** Tableauでデータソース接続時に使用する独自のSQLクエリ

**予測での活用例：**
```sql
-- 日次集計での高速化
SELECT 
    DATE_TRUNC('day', order_date) as date_day,
    SUM(sales_amount) as daily_sales,
    COUNT(DISTINCT customer_id) as unique_customers
FROM orders 
WHERE order_date >= CURRENT_DATE - INTERVAL '2 years'
GROUP BY DATE_TRUNC('day', order_date)
ORDER BY date_day;
```

---

## 🔤 D

### 📖 Data Granularity（データ粒度）
**定義：** データの細かさのレベル

**予測への影響：**
- **日次データ**：短期予測に適している、ノイズが多い
- **週次データ**：中期予測、季節性が見やすい
- **月次データ**：長期予測、トレンドが明確

**選択基準：**
```
予測期間 ≤ データ期間の1/3
例：2年分の月次データ → 8ヶ月先まで予測可能
```

### 🔧 Data Source（データソース）
**定義：** Tableauが接続するデータの源泉

**予測に適したデータソース設計：**
- **ライブ接続**：リアルタイム予測更新
- **エクストラクト**：大量データの高速処理
- **増分更新**：新しいデータのみ追加

### 📊 Decomposition（分解）
**定義：** 時系列データを複数の成分に分けて分析する手法

**成分の種類：**
```
時系列データ = トレンド + 季節性 + 不規則変動

トレンド：長期的な傾向
季節性：周期的なパターン
不規則変動：予測できないランダムな変動
```

**実務での活用：**
- 売上の長期トレンド分析
- 季節要因の定量化
- 異常値の検出

---

## 🔤 E

### 📊 Exponential Smoothing（指数平滑化）
**定義：** 過去のデータに重みを付けて予測する手法（最近のデータほど重要視）

**数式：**
```
S[t] = α × X[t] + (1-α) × S[t-1]

α: 平滑化定数（0-1）
α=0.1: 変化に鈍感（安定）
α=0.9: 変化に敏感（反応的）
```

**Tableauでの使用：**
- 自動予測のデフォルトアルゴリズムの一つ
- 季節性のないデータに効果的
- 短期予測に適している

### 🔧 Extract（エクストラクト）
**定義：** Tableauがデータを高速処理するために作成する専用ファイル

**予測での利点：**
- 計算速度の向上
- ネットワーク負荷の軽減
- オフライン分析が可能

**運用のベストプラクティス：**
```python
# 毎日午前2時に更新
extract_settings = {
    "schedule": "0 2 * * *",
    "incremental": True,
    "filter_recent": "30 days"
}
```

---

## 🔤 F

### 📖 Forecast（予測）
**定義：** 過去のデータパターンに基づいて未来の値を推定すること

**Tableauでの予測タイプ：**
- **自動予測**：Tableauが最適なモデルを選択
- **手動設定**：ユーザーがパラメータを指定
- **条件付き予測**：外部要因を考慮した予測

### 📊 Forecast Horizon（予測期間）
**定義：** どれくらい先まで予測するかを表す期間

**設定の目安：**
```
データ期間が2年 → 予測期間は最大8ヶ月
データ期間が5年 → 予測期間は最大1年8ヶ月

推奨：データ期間の1/4以下
```

### 🔧 Forecast Quality（予測品質）
**定義：** Tableauの予測計算の精度レベル設定

**設定オプション：**
- **高速**：計算時間優先、精度は標準
- **バランス**：速度と精度のバランス
- **高品質**：精度優先、計算時間長い

**使い分け：**
- 探索的分析：高速
- 日次運用：バランス
- 重要な意思決定：高品質

---

## 🔤 G

### 📊 Granularity（粒度）
**定義：** データの詳細レベル

**予測における粒度の選択：**
```
細かい粒度（時間別）：
✓ 短期予測に適している
✗ ノイズが多い、計算量大

粗い粒度（月別）：
✓ 長期トレンドが見やすい
✗ 短期変動を捉えられない
```

---

## 🔤 H

### 📊 Holt-Winters Method（ホルト・ウィンターズ法）
**定義：** トレンドと季節性の両方を考慮した指数平滑化手法

**適用場面：**
- 季節性のある売上データ
- 毎年同じパターンを持つデータ
- 中期予測（3-12ヶ月）

**Tableauでの使用：**
自動予測で季節性が検出された場合に内部的に使用される

---

## 🔤 I

### 📖 Interpolation（補間）
**定義：** 欠損値を周辺の値から推定して埋める手法

**手法の種類：**
```sql
-- 線形補間
WITH filled_data AS (
  SELECT date_col, 
         COALESCE(sales, 
           LAG(sales) OVER (ORDER BY date_col) + 
           (LEAD(sales) OVER (ORDER BY date_col) - LAG(sales) OVER (ORDER BY date_col)) / 2
         ) as sales_filled
  FROM sales_table
)
```

**注意点：**
- 補間しすぎるとデータの自然性が失われる
- 連続する欠損には不適切
- ビジネスロジックを考慮した補間が重要

---

## 🔤 L

### 📊 Lead Time（リードタイム）
**定義：** 予測から実際の意思決定・行動までの時間

**ビジネスでの重要性：**
```
在庫発注の例：
予測作成: 1月1日
発注決定: 1月3日（2日のリードタイム）
商品到着: 1月10日（7日の調達リードタイム）
→ 1月10日の需要を1月1日に予測する必要
```

### 🔧 Live Connection（ライブ接続）
**定義：** データベースに直接接続してリアルタイムでデータを取得する方式

**予測での活用：**
- 最新データでの予測更新
- ダッシュボードの自動更新
- リアルタイム監視

**トレードオフ：**
```
ライブ接続:
✓ 常に最新データ
✗ ネットワーク依存、計算速度

エクストラクト:
✓ 高速、安定
✗ 更新タイミングが必要
```

---

## 🔤 M

### 📊 MAE（Mean Absolute Error）
**定義：** 平均絶対誤差、予測精度の評価指標

**計算式：**
```
MAE = (1/n) × Σ|実績値 - 予測値|

例：
実績: [100, 110, 120]
予測: [95, 115, 125]
MAE = (|100-95| + |110-115| + |120-125|) / 3 = 5
```

**特徴：**
- 単位が元データと同じで理解しやすい
- 外れ値に比較的鈍感
- ビジネス担当者への説明に適している

### 📊 MAPE（Mean Absolute Percentage Error）
**定義：** 平均絶対パーセント誤差、最も使われる予測精度指標

**計算式：**
```
MAPE = (1/n) × Σ|実績値 - 予測値|/実績値 × 100%

評価基準：
< 10%: 非常に良い
10-20%: 良い  
20-50%: 普通
> 50%: 改善が必要
```

**注意点：**
- 実績値が0に近いと計算不能
- 実績値が小さいと誤差が大きく見える
- 非対称性（過大予測と過小予測で異なる影響）

### 🔧 Model（モデル）
**定義：** データのパターンを数学的に表現したもの

**Tableauで選択可能なモデル：**
- **自動**：Tableauが最適なモデルを選択
- **指数平滑化（加法）**：季節性が一定
- **指数平滑化（乗法）**：季節性が変動
- **線形トレンド**：直線的な増加・減少

---

## 🔤 N

### 📊 Noise（ノイズ）
**定義：** データに含まれるランダムな変動、予測困難な部分

**ノイズの影響：**
- 予測精度の低下
- モデルの過学習
- パターンの見誤り

**対策：**
```sql
-- 移動平均でノイズを減らす
SELECT date_col,
       AVG(sales) OVER (
         ORDER BY date_col 
         ROWS BETWEEN 6 PRECEDING AND CURRENT ROW
       ) as smoothed_sales
FROM sales_data;
```

---

## 🔤 O

### 📊 Outlier（外れ値）
**定義：** 他のデータから大きく離れた異常な値

**検出方法：**
```sql
-- 統計的検出（3σ法）
WITH stats AS (
  SELECT AVG(sales) as mean_sales,
         STDDEV(sales) as std_sales
  FROM sales_data
)
SELECT *
FROM sales_data, stats
WHERE sales > mean_sales + 3 * std_sales
   OR sales < mean_sales - 3 * std_sales;
```

**処理方法：**
- **除外**：明らかな入力ミス
- **置換**：移動平均や中央値で置換
- **分析**：ビジネス的に意味がある場合は保持

### 🔧 Overwrite（上書き）
**定義：** 既存のデータやワークブックを新しいもので置き換えること

**予測での運用：**
```python
# 毎日の予測更新
def daily_forecast_update():
    # 新しいデータで予測を再計算
    new_forecast = calculate_forecast()
    
    # 既存の予測結果を上書き
    save_forecast(new_forecast, mode='overwrite')
```

---

## 🔤 P

### 📖 Prediction（予測）
**定義：** 特定の条件や入力に対する出力の推定

**ForecastとPredictionの違い：**
```
Forecast（予測）：
- 時系列データの未来値
- 時間軸が重要
- 例：来月の売上

Prediction（予想）：
- より広義の推定
- 時間軸は必須でない
- 例：顧客の購買確率
```

### 📊 R²（R-squared、決定係数）
**定義：** モデルがデータの変動をどの程度説明できるかを示す指標

**値の解釈：**
```
R² = 1.0: 完全にデータを説明（過学習の可能性）
R² = 0.8: 80%の変動を説明（良好）
R² = 0.5: 50%の変動を説明（普通）
R² = 0.0: 全く説明できない（モデル無効）
```

### 🔧 REST API
**定義：** HTTPプロトコルを使ったWebサービスのインターフェース

**Tableau REST APIの活用：**
```python
# 予測結果の自動取得
import requests

def get_forecast_data(server_url, auth_token, view_id):
    headers = {'X-Tableau-Auth': auth_token}
    url = f"{server_url}/api/3.9/sites/default/views/{view_id}/data"
    
    response = requests.get(url, headers=headers)
    return response.content
```

---

## 🔤 S

### 📊 Seasonality（季節性）
**定義：** 時系列データに見られる周期的なパターン

**季節性の種類：**
```
年次季節性：12ヶ月周期
- 夏物・冬物商品の売上
- 光熱費の変動

週次季節性：7日周期  
- 平日・週末のアクセス数
- 曜日別の売上パターン

日次季節性：24時間周期
- 時間別のWebアクセス
- 電力使用量の変動
```

**Tableauでの設定：**
- 自動検出：Tableauが周期を自動識別
- 手動設定：周期の長さを明示的に指定

### 🔧 Snapshot（スナップショット）
**定義：** 特定時点でのデータの状態を保存したもの

**予測での活用：**
```sql
-- 日次予測結果の保存
CREATE TABLE forecast_snapshots (
    snapshot_date DATE,
    forecast_date DATE,
    predicted_value DECIMAL(10,2),
    confidence_lower DECIMAL(10,2),
    confidence_upper DECIMAL(10,2),
    model_version VARCHAR(20)
);
```

### 📊 Smoothing（平滑化）
**定義：** データのノイズを減らして滑らかにする処理

**移動平均による平滑化：**
```sql
-- 7日移動平均
SELECT date_col,
       sales,
       AVG(sales) OVER (
         ORDER BY date_col 
         ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING
       ) as smoothed_sales
FROM daily_sales;
```

---

## 🔤 T

### 📖 Time Series（時系列）
**定義：** 時間順に並べられたデータの集合

**時系列データの特徴：**
- **トレンド**：長期的な傾向
- **季節性**：周期的なパターン
- **自己相関**：過去の値が現在に影響

**必要な前処理：**
```python
# 時系列データの基本的な前処理
import pandas as pd

def prepare_timeseries(df):
    # 日付型に変換
    df['date'] = pd.to_datetime(df['date'])
    
    # 日付でソート
    df = df.sort_values('date')
    
    # 欠損値の処理
    df = df.fillna(method='forward')
    
    return df
```

### 🔧 Trend（トレンド）
**定義：** データの長期的な方向性

**トレンドの種類：**
- **上昇トレンド**：値が時間とともに増加
- **下降トレンド**：値が時間とともに減少
- **横ばいトレンド**：値がほぼ一定

**Tableauでの可視化：**
- トレンドライン機能
- 回帰分析
- 前年比較

---

## 🔤 V

### 📊 Validation（検証）
**定義：** モデルの性能を客観的に評価すること

**検証手法：**
```python
# 時系列データの検証方法

# 1. ホールドアウト検証
train_data = data[:-30]  # 最新30日を除く
test_data = data[-30:]   # 最新30日

# 2. ウォークフォワード検証
for i in range(30):
    train = data[:-(30-i)]
    test = data[-(30-i)]
    model.fit(train)
    prediction = model.predict(test)
```

### 🔧 Variance（分散）
**定義：** データのばらつきの大きさを表す統計量

**予測における重要性：**
- 分散が大きい → 予測の不確実性が高い
- 分散が小さい → 安定した予測が可能

**計算例：**
```sql
-- 売上の月別分散
SELECT EXTRACT(MONTH FROM date_col) as month,
       VAR_POP(sales) as sales_variance
FROM sales_data
GROUP BY EXTRACT(MONTH FROM date_col);
```

---

## 🔤 W

### 🔧 Workbook（ワークブック）
**定義：** Tableauの分析内容を保存するファイル

**予測ワークブックの構成例：**
```
📊 売上予測ワークブック
├── 📈 基本予測（月次）
├── 📊 カテゴリ別予測
├── 🎯 精度監視ダッシュボード
├── 📋 予測サマリー
└── ⚙️ 設定・パラメータ
```

**ベストプラクティス：**
- データソースの分離
- 計算フィールドの整理
- 定期的なパフォーマンス確認

### 🔧 Worksheet（ワークシート）
**定義：** ワークブック内の個別の分析画面

**予測用ワークシートの種類：**
- **基本予測**：メインの予測グラフ
- **精度評価**：MAPE、MAE等の指標
- **分解分析**：トレンド・季節性の分析
- **比較分析**：複数モデルの比較

---

## 🎯 実務でよく使う用語ランキング

### 🥇 最重要（毎日使う）
1. **Forecast（予測）**
2. **MAPE（平均絶対パーセント誤差）**
3. **Confidence Interval（信頼区間）**
4. **Seasonality（季節性）**
5. **Trend（トレンド）**

### 🥈 重要（週1-2回使う）
6. **Extract（エクストラクト）**
7. **Granularity（粒度）**
8. **Outlier（外れ値）**
9. **Baseline（ベースライン）**
10. **Validation（検証）**

### 🥉 知っておくべき（月1-2回使う）
11. **ARIMA**
12. **Exponential Smoothing（指数平滑化）**
13. **R²（決定係数）**
14. **Lead Time（リードタイム）**
15. **Interpolation（補間）**

## 💡 用語学習のコツ

### 📚 段階的学習法
```
Week 1: 基本用語（Forecast, MAPE, Confidence Interval）
Week 2: 統計用語（Seasonality, Trend, Outlier）
Week 3: 技術用語（Extract, API, Validation）
Week 4: 応用用語（ARIMA, R², Smoothing）
```

### 🔄 実践的学習法
1. **用語カード**作成
2. **実際のデータ**で用語を使って分析
3. **チームメンバー**との用語統一
4. **英語文献**での用語確認

### 📝 用語使用チェックリスト

**ステークホルダーとの会話で：**
- [ ] 技術用語を多用しすぎていないか？
- [ ] ビジネス用語で言い換えられるか？
- [ ] 相手のレベルに合わせているか？

**技術文書作成で：**
- [ ] 用語の定義が明確か？
- [ ] 略語の説明があるか？
- [ ] 一貫した用語使用ができているか？

---

## 🚀 さらなる学習のために

### 📖 推奨書籍
- 「統計学入門」- 東京大学教養学部統計学教室
- 「時系列解析」- 沖本竜義
- 「Tableauによる最強・最速のデータ可視化」

### 🌐 オンラインリソース
- Tableau Public：無料練習環境
- Tableau Community：用語に関するQ&A
- Coursera：統計学・時系列分析コース

### 🤝 コミュニティ
- Tableau User Group：地域の勉強会
- データ分析勉強会：用語の理解を深める
- 社内勉強会：チーム内での用語統一

---

**この用語集が皆さんのTableau予測学習に役立てば幸いです！** 📚✨

**不明な用語があれば、コメントで質問してください 💬**

#Tableau #予測分析 #用語集 #データ分析 #統計学 #時系列分析 #BI #新人エンジニア
