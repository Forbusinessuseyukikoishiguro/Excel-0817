# 📊 Tableau分析完全用語集：新人エンジニアのための分析辞典

新人エンジニアがTableauを使った分析で遭遇する全ての用語を、実践的な観点から詳しく解説します。基本的なTableau操作から高度な統計分析まで、幅広くカバーしています。

## 🎯 用語分類システム

- 🟦 **基本用語**：Tableau操作の基礎（必須習得）
- 🟨 **可視化用語**：チャート・ダッシュボード関連
- 🟪 **データ処理用語**：データ変換・結合・計算
- 🟩 **統計分析用語**：統計的手法・指標
- 🟧 **パフォーマンス用語**：処理速度・最適化
- 🟥 **ビジネス用語**：実務での意思決定支援

---

## 🔤 A

### 🟩 A/B Testing（A/Bテスト）
**定義：** 2つの異なる施策の効果を比較するための実験手法

**Tableauでの実装：**
```
データ構造例：
user_id | group | conversion_rate | test_period
1001    | A     | 0.12           | 2024-01
1002    | B     | 0.15           | 2024-01
```

**分析手順：**
1. グループ別のコンバージョン率を計算
2. 統計的有意性をt検定で確認
3. 信頼区間を表示してリスク評価

**計算フィールド例：**
```
// A/Bテストの効果量
(AVG({FIXED [Group] : [Conversion Rate]}) - 
 AVG({FIXED [Group] : [Conversion Rate]})) / 
 AVG({FIXED [Group] : [Conversion Rate]}) * 100
```

### 🟦 Actions（アクション）
**定義：** ダッシュボード内の要素間で相互作用を設定する機能

**アクションの種類：**
- **フィルターアクション**：クリックで他のシートをフィルタリング
- **ハイライトアクション**：マウスオーバーで関連データをハイライト
- **URLアクション**：外部サイトへのリンク
- **シート移動アクション**：別のシートへ移動

**実践例：**
```
売上ダッシュボードの設計：
地域マップをクリック → 該当地域の詳細グラフが表示
商品をホバー → 関連する売上データがハイライト
```

### 🟩 Aggregation（集計）
**定義：** 複数のデータポイントを1つの値にまとめる計算

**Tableauの集計関数：**
```
SUM([Sales])        # 合計
AVG([Sales])        # 平均
COUNT([Orders])     # 件数
COUNTD([Customer])  # 重複除外カウント
MIN([Date])         # 最小値
MAX([Date])         # 最大値
MEDIAN([Price])     # 中央値
STDEV([Sales])      # 標準偏差
```

**集計レベルの制御：**
```
// 月次集計を強制
{FIXED MONTH([Date]) : SUM([Sales])}

// 顧客別の平均注文額
{FIXED [Customer ID] : AVG([Order Value])}
```

### 🟨 Axis（軸）
**定義：** チャートの縦軸・横軸で、データの範囲や分類を表す

**軸のカスタマイズ：**
- **固定範囲**：比較しやすくするため
- **対数スケール**：大きな差のあるデータ用
- **デュアル軸**：異なる指標を同時表示
- **同期軸**：複数チャートの軸を統一

**ベストプラクティス：**
```
売上と利益率のデュアル軸：
- 左軸：売上（金額）
- 右軸：利益率（パーセント）
- 軸の色分けで識別しやすく
```

---

## 🔤 B

### 🟩 Binning（ビニング）
**定義：** 連続値を区間に分けてカテゴリ化する処理

**使用場面：**
- 年齢層の分析（20代、30代...）
- 売上規模の分類（小・中・大）
- 時間帯の分析（朝・昼・夜）

**実装方法：**
```
// 売上規模のビニング
IF [Sales] < 10000 THEN "小"
ELSEIF [Sales] < 50000 THEN "中"
ELSE "大"
END

// 自動ビニング
右クリック → 作成 → ビン
```

### 🟦 Blend（ブレンド）
**定義：** 異なるデータソースを関連フィールドで結合する機能

**Joinとの違い：**
```
Join（結合）：
- データソースレベルで結合
- 1つのテーブルとして扱う
- 高速、制約あり

Blend（ブレンド）：
- ビューレベルで結合  
- 複数データソースを保持
- 柔軟、やや低速
```

**実践例：**
```
売上データ（SQL Server）+ 予算データ（Excel）
→ 売上実績 vs 予算の比較分析
```

### 🟨 Box Plot（箱ひげ図）
**定義：** データの分布状況を5つの統計値で表現するチャート

**構成要素：**
```
最大値（上端）
75%点（第3四分位数）
中央値（第2四分位数）
25%点（第1四分位数）
最小値（下端）
外れ値（点で表示）
```

**ビジネス活用：**
- 地域別売上のばらつき分析
- 商品価格の分布確認
- 顧客の年齢分布分析

---

## 🔤 C

### 🟪 Calculated Field（計算フィールド）
**定義：** 既存のフィールドを使って新しい値を計算するカスタムフィールド

**計算の種類：**
```
// 基本計算
[Profit] / [Sales]  // 利益率

// 条件分岐
IF [Sales] > 10000 THEN "High" ELSE "Low" END

// 日付計算
DATEDIFF('day', [Order Date], [Ship Date])

// 文字列操作
LEFT([Product Name], 3)  // 最初の3文字

// 統計計算
WINDOW_AVG(SUM([Sales]))  // 移動平均
```

**パフォーマンス考慮：**
```
// ❌ 重い計算
IF CONTAINS([Product], "Laptop") THEN...

// ✅ 軽い計算  
[Product Category] = "Electronics"
```

### 🟩 Cohort Analysis（コホート分析）
**定義：** 特定の期間に共通の体験をしたユーザーグループの行動分析

**実装手順：**
```sql
-- 初回購入月の計算
{FIXED [Customer ID] : MIN([Order Date])}

-- コホート期間の計算
DATEDIFF('month', 
  {FIXED [Customer ID] : MIN([Order Date])}, 
  [Order Date]
)
```

**ビジネス価値：**
- 顧客のLTV（生涯価値）分析
- リテンション率の測定
- 施策効果の長期追跡

### 🟩 Correlation（相関）
**定義：** 2つの変数間の関係の強さを表す統計指標

**Tableauでの計算：**
```
// 相関係数の計算
CORR([Sales], [Profit])

// 散布図での可視化
- X軸：売上
- Y軸：利益  
- トレンドライン表示
- R²値の確認
```

**相関係数の解釈：**
```
+0.8 〜 +1.0: 強い正の相関
+0.5 〜 +0.8: 中程度の正の相関
-0.5 〜 +0.5: 弱い相関
-0.8 〜 -0.5: 中程度の負の相関  
-1.0 〜 -0.8: 強い負の相関
```

### 🟨 Cross Tab（クロス集計）
**定義：** 2つ以上のカテゴリ変数の組み合わせで集計する表形式

**作成方法：**
```
行：地域
列：商品カテゴリ
値：売上合計

結果例：
        Electronics | Furniture | Office
East    1,200,000  | 800,000   | 600,000
West    1,500,000  | 900,000   | 700,000
```

**高度な使用法：**
```
// 構成比の表示
SUM([Sales]) / TOTAL(SUM([Sales]))

// 前年同期比較
(SUM([Sales]) - LOOKUP(SUM([Sales]), -12)) / 
LOOKUP(SUM([Sales]), -12)
```

---

## 🔤 D

### 🟦 Dashboard（ダッシュボード）
**定義：** 複数のワークシートを組み合わせた統合的な分析画面

**効果的な設計原則：**
```
5秒ルール：
- 5秒以内に主要な洞察が分かる
- 階層的な情報構造
- 適切な色使いとレイアウト

レスポンシブ設計：
- デバイスに応じたレイアウト調整
- 動的なサイズ調整
- タッチフレンドリーな操作
```

**コンポーネント構成：**
```
📊 KPIサマリー（上部）
📈 主要トレンド（中央）
🔍 詳細分析（下部）
🎛️ フィルター（左側）
```

### 🟦 Data Source（データソース）
**定義：** Tableauが分析対象とするデータの源泉

**接続方法による分類：**
```
ライブ接続：
✓ リアルタイムデータ
✗ ネットワーク依存

エクストラクト：  
✓ 高速処理
✗ 更新タイミング必要

ハイブリッド：
✓ 両方の利点
✗ 複雑な管理
```

**最適化のポイント：**
```sql
-- データソース最適化
SELECT 
    DATE_TRUNC('day', order_date) as order_day,
    product_category,
    SUM(sales_amount) as daily_sales
FROM orders 
WHERE order_date >= CURRENT_DATE - INTERVAL '2 years'
GROUP BY 1, 2;
```

### 🟦 Dimension（ディメンション）
**定義：** データを分類・分割するためのカテゴリ変数

**ディメンションの種類：**
```
カテゴリ型：
- 商品名、地域、顧客セグメント
- 青色のアイコンで表示

日付型：
- 注文日、出荷日、期日
- 階層構造（年→四半期→月→日）

地理型：
- 国、州、市、郵便番号
- 地図での可視化が可能
```

**階層の作成：**
```
製品階層の例：
Category → Sub-Category → Product Name

地域階層の例：  
Country → State → City → Postal Code
```

---

## 🔤 E

### 🟧 Extract（エクストラクト）
**定義：** 高速処理のためにTableau専用形式で保存されたデータ

**エクストラクトの利点：**
```
パフォーマンス：
- インメモリ処理
- 圧縮されたデータ
- インデックス最適化

可用性：
- オフライン分析可能
- ネットワーク障害に対応
- データソースの負荷軽減
```

**エクストラクト戦略：**
```python
# 増分更新の設定
extract_config = {
    "refresh_type": "incremental",
    "filter_condition": "created_at >= CURRENT_DATE - 7",
    "schedule": "daily",
    "time": "02:00"
}
```

**最適化設定：**
```
データの集計：
☑ 可視ディメンションの集計
☑ データのロールアップ
☐ 履歴の削除

フィルター：
☑ 過去2年間のデータのみ
☑ アクティブな顧客のみ
```

---

## 🔤 F

### 🟦 Filter（フィルター）
**定義：** 表示するデータを条件に基づいて絞り込む機能

**フィルターの種類と実行順序：**
```
1. エクストラクトフィルター（データソース）
2. データソースフィルター  
3. コンテキストフィルター
4. ディメンションフィルター
5. メジャーフィルター
6. テーブル計算フィルター
```

**実践的な活用：**
```
// 動的日付フィルター
[Order Date] >= TODAY() - 30

// トップNフィルター  
INDEX() <= 10

// 条件付きフィルター
IF [Region] = "East" THEN [Sales] > 10000
ELSE [Sales] > 5000 END
```

**パフォーマンス最適化：**
```
効率的なフィルター順序：
1. カーディナリティの低いフィルター
2. 削減効果の高いフィルター
3. 計算の軽いフィルター
```

---

## 🔤 G

### 🟨 Gantt Chart（ガントチャート）
**定義：** プロジェクトの進捗や期間を時間軸で表現するチャート

**Tableauでの作成：**
```
必要なフィールド：
- タスク名（ディメンション）
- 開始日（日付）
- 期間（日数）

作成手順：
1. タスク名を行に配置
2. 開始日を列に配置  
3. ガントバーマークを選択
4. 期間をサイズに配置
```

**ビジネス活用例：**
- プロジェクト管理
- 生産スケジュール
- キャンペーン計画
- リソース管理

---

## 🔤 H

### 🟨 Heat Map（ヒートマップ）
**定義：** データの値を色の濃淡で表現するマトリックス形式の可視化

**効果的な使用場面：**
```
時系列ヒートマップ：
- 行：時間（時・曜日・月）
- 列：カテゴリ
- 色：売上・アクセス数

地理ヒートマップ：
- 地図上での密度表現
- 店舗配置の最適化
- 商圏分析
```

**設計のコツ：**
```
色の選択：
✓ 直感的な色使い（赤=高、青=低）
✓ 色覚多様性への配慮
✗ 意味のない虹色グラデーション

データの正規化：
// 相対値での比較
(SUM([Sales]) - MIN(SUM([Sales]))) / 
(MAX(SUM([Sales])) - MIN(SUM([Sales])))
```

### 🟨 Histogram（ヒストグラム）
**定義：** 連続値の分布を区間ごとの度数で表現する棒グラフ

**作成手順：**
```
1. 連続値（価格、年齢等）を選択
2. 右クリック → 作成 → ビン
3. ビンサイズを適切に設定
4. 棒グラフで度数を表示
```

**ビンサイズの選択：**
```python
# スタージェスの公式
bin_count = math.ceil(math.log2(n) + 1)

# 実用的な目安
データ数 < 50:   5-10ビン
データ数 50-200: 10-20ビン  
データ数 > 200:  20-50ビン
```

---

## 🔤 I

### 🟪 Index（インデックス）
**定義：** データベースの検索を高速化するためのデータ構造

**Tableauでの影響：**
```sql
-- 効率的なクエリ（インデックス使用）
SELECT * FROM sales 
WHERE order_date >= '2024-01-01'
AND region = 'East';

-- 推奨インデックス
CREATE INDEX idx_sales_date_region 
ON sales(order_date, region);
```

**パフォーマンス最適化：**
```
フィルター用インデックス：
- 日付フィールド（必須）
- よく使用するカテゴリ
- 結合キー

複合インデックス：
- 頻繁に組み合わせるフィルター
- カーディナリティの低い順
```

---

## 🔤 J

### 🟪 Join（結合）
**定義：** 複数のテーブルを関連キーで統合する操作

**結合の種類：**
```sql
-- 内部結合（Inner Join）
共通データのみ取得

-- 左結合（Left Join）  
左テーブルの全データ + 右テーブルの一致データ

-- 右結合（Right Join）
右テーブルの全データ + 左テーブルの一致データ

-- 完全外部結合（Full Outer Join）
両テーブルの全データ
```

**Tableauでの結合設定：**
```
物理レイヤー：
- データベース上での結合
- 高いパフォーマンス
- シンプルな関係

論理レイヤー：
- Tableau内での結合
- 複雑な関係対応
- 柔軟性高い
```

**結合の最適化：**
```
パフォーマンス向上：
1. 結合キーにインデックス設定
2. 不要な列は事前に除外
3. フィルターをJoin前に適用
4. 結合順序の最適化
```

---

## 🔤 K

### 🟥 KPI（Key Performance Indicator）
**定義：** 事業目標の達成度を測る重要業績評価指標

**よく使われるKPI例：**
```
売上系：
- 売上高、売上成長率
- 平均注文単価、客単価
- 新規顧客獲得数

効率系：
- 利益率、ROI、ROAS
- コンバージョン率
- 顧客獲得コスト（CAC）

満足度系：
- NPS（Net Promoter Score）
- 顧客満足度スコア
- リピート率
```

**KPIダッシュボード設計：**
```
レイアウト例：
┌─────────┬─────────┬─────────┐
│ 売上    │ 利益率  │ 新規客  │
│ ¥125M   │ 23.4%   │ 1,247   │
│ ↑12%    │ ↓2.1%   │ ↑34%    │
├─────────┴─────────┴─────────┤
│        トレンドグラフ         │
└─────────────────────────────┘
```

---

## 🔤 L

### 🟪 LOD（Level of Detail）計算
**定義：** 通常の集計レベルと異なるレベルで計算を実行する機能

**LODの種類：**
```
FIXED：指定レベルで固定
{FIXED [Customer] : SUM([Sales])}
→ 顧客別売上（ビューの構成に関係なく）

INCLUDE：現在レベル + 追加レベル
{INCLUDE [Product] : AVG([Sales])}  
→ 現在の集計 + 商品レベルを追加

EXCLUDE：現在レベル - 指定レベル
{EXCLUDE [Region] : SUM([Sales])}
→ 地域を除いた全体での集計
```

**実践例：**
```
// 顧客ランキング
{FIXED [Customer] : SUM([Sales])} 

// 全体平均との比較
SUM([Sales]) - {FIXED : AVG([Sales])}

// 移動平均
{FIXED DATETRUNC('month',[Date]) : AVG([Sales])}
```

**複雑な分析例：**
```
// 新規 vs リピート顧客
IF {FIXED [Customer] : MIN([Order Date])} = [Order Date]
THEN "新規" ELSE "リピート" END

// 上位20%顧客の売上構成比  
IF {FIXED [Customer] : SUM([Sales])} >= 
   {FIXED : PERCENTILE(SUM([Sales]), 0.8)}
THEN "上位20%" ELSE "その他" END
```

---

## 🔤 M

### 🟦 Measure（メジャー）
**定義：** 数値データで、集計計算の対象となる量的変数

**メジャーの種類：**
```
加算性メジャー：
- 売上、数量、コスト
- SUM()で意味のある集計が可能

非加算性メジャー：
- 率、比率、インデックス値
- 平均での集計が適切

半加算性メジャー：
- 在庫、残高（時点データ）
- 期間によって加算性が変わる
```

**適切な集計関数：**
```
SUM([Sales])     # 売上合計
AVG([Price])     # 平均価格  
COUNT([Orders])  # 注文件数
MIN([Date])      # 最小日付
MAX([Date])      # 最大日付
```

### 🟨 Map（地図）
**定義：** 地理データを地図上で可視化する機能

**地図の種類：**
```
シンボルマップ：
- 場所ごとの点で値を表現
- サイズ・色でメトリクス表現

塗り分けマップ：
- 地域全体を色で塗り分け
- 密度や比率の表現に適している

密度マップ：
- データポイントの密集度を表現
- ヒートマップ形式
```

**地理階層の設定：**
```
自動認識される地理フィールド：
- 国、州、市、郵便番号
- 緯度、経度

カスタム地域の作成：
- 営業地区
- 商圏
- 配送エリア
```

---

## 🔤 N

### 🟩 Normal Distribution（正規分布）
**定義：** 平均を中心に左右対称のベル型になる確率分布

**特徴と活用：**
```
68-95-99.7ルール：
- 平均 ± 1σ: 68%のデータ
- 平均 ± 2σ: 95%のデータ  
- 平均 ± 3σ: 99.7%のデータ

ビジネス応用：
- 売上の予測範囲
- 品質管理の管理限界
- 異常値の検出
```

**Tableauでの確認：**
```
// 正規分布の確認
1. ヒストグラムで分布確認
2. Q-Qプロットで正規性テスト
3. 平均・標準偏差の計算

AVG([Sales])     # 平均
STDEV([Sales])   # 標準偏差
```

---

## 🔤 O

### 🟩 Outlier（外れ値）
**定義：** 他のデータから大きく離れた異常な値

**検出方法：**
```
統計的検出：
// 3σ法
IF ABS([Sales] - AVG([Sales])) > 3 * STDEV([Sales])
THEN "外れ値" ELSE "正常値" END

// IQR法（四分位範囲）
IF [Sales] > ATTR({FIXED : PERCENTILE([Sales], 0.75)}) + 
           1.5 * (ATTR({FIXED : PERCENTILE([Sales], 0.75)}) - 
                  ATTR({FIXED : PERCENTILE([Sales], 0.25)}))
THEN "外れ値" ELSE "正常値" END
```

**視覚的検出：**
```
箱ひげ図：
- 箱の外の点が外れ値
- 自動的に識別・表示

散布図：
- トレンドから離れた点
- 相関から外れたデータ
```

**対処方法：**
```
1. 原因調査
   - データ入力ミス？
   - システムエラー？
   - 実際の異常値？

2. 処理選択
   - 削除（明らかなエラー）
   - 置換（中央値・平均値）
   - 保持（分析対象として重要）
```

---

## 🔤 P

### 🟦 Parameter（パラメータ）
**定義：** ユーザーが値を動的に変更できる変数

**パラメータの活用例：**
```
日付範囲の動的変更：
パラメータ：分析期間（30日、90日、1年）
計算：[Order Date] >= TODAY() - [分析期間パラメータ]

メトリクスの切り替え：
パラメータ：表示指標（売上、利益、数量）
計算：
CASE [表示指標パラメータ]
WHEN "売上" THEN SUM([Sales])
WHEN "利益" THEN SUM([Profit])  
WHEN "数量" THEN SUM([Quantity])
END
```

**高度な活用：**
```
// What-Ifシナリオ分析
予測売上 = [現在売上] * (1 + [成長率パラメータ]/100)

// 動的フィルタリング
IF [トップNパラメータ] = 0 
THEN TRUE
ELSE INDEX() <= [トップNパラメータ]
END
```

### 🟩 Percentile（パーセンタイル）
**定義：** データを順序に並べたときの相対的な位置を表す指標

**よく使われるパーセンタイル：**
```
25%点（Q1）：下位25%の境界
50%点（Q2）：中央値
75%点（Q3）：上位25%の境界
90%点：上位10%の境界
95%点：上位5%の境界
```

**Tableauでの計算：**
```
PERCENTILE([Sales], 0.25)  # 第1四分位数
PERCENTILE([Sales], 0.5)   # 中央値
PERCENTILE([Sales], 0.75)  # 第3四分位数
PERCENTILE([Sales], 0.9)   # 90パーセンタイル
```

**ビジネス活用：**
```
顧客セグメンテーション：
- 上位10%：VIP顧客
- 10-30%：優良顧客
- 30-70%：一般顧客
- 70-100%：新規顧客
```

---

## 🔤 Q

### 🟩 Quartile（四分位数）
**定義：** データを4等分する3つの境界値

**四分位数の意味：**
```
Q1（第1四分位数）：25%点
Q2（第2四分位数）：50%点（中央値）
Q3（第3四分位数）：75%点

IQR（四分位範囲）：Q3 - Q1
```

**箱ひげ図での表現：**
```
    最大値
      |
    ┌─Q3─┐
    │   │
    ├─Q2─┤  ← 箱
    │   │  
    └─Q1─┘
      |
    最小値
```

---

## 🔤 R

### 🟩 Regression（回帰分析）
**定義：** 変数間の関係を数式で表現し、予測に活用する統計手法

**Tableauでの回帰分析：**
```
線形回帰：
1. 散布図を作成
2. 分析 → トレンドライン
3. 線形を選択
4. R²値、p値を確認

回帰式の表示：
y = ax + b
R² = 0.85 (決定係数)
p < 0.001 (有意性)
```

**回帰の種類：**
```
線形回帰：
Y = a + bX
最もシンプル、解釈しやすい

多項式回帰：
Y = a + bX + cX²
曲線的な関係を表現

対数回帰：
Y = a + b*ln(X)
収穫逓減の関係
```

**ビジネス活用例：**
```
売上予測：
販売員数 × 回帰係数 = 予想売上

価格最適化：
価格 vs 需要の回帰分析

マーケティング効果：
広告費 vs コンバージョンの関係
```

---

## 🔤 S

### 🟦 Set（セット）
**定義：** 条件に基づいてメンバーを動的に選択するグループ化機能

**セットの種類：**
```
固定セット：
- 手動で選択したメンバー
- 変更しない限り固定

動的セット：
- 条件に基づく自動選択
- データ変更で自動更新

結合セット：
- 複数セットの組み合わせ
- AND、OR、NOT演算
```

**実践例：**
```
トップ売上顧客セット：
条件：上位20名
またはSUM([Sales]) > 100000

VIP顧客セット：
条件1：購入回数 >= 10
条件2：平均注文額 >= 50000
演算：AND
```

**セットアクション：**
```
ダッシュボードでの活用：
1. チャートでデータ選択
2. セットに追加・除外
3. 他のシートが動的更新
```

### 🟩 Standard Deviation（標準偏差）
**定義：** データのばらつきの大きさを表す統計量

**計算と解釈：**
```
標準偏差 = √(分散)

小さい標準偏差：
- データが平均に集中
- 予測しやすい、安定

大きい標準偏差：
- データが広く分散  
- 予測困難、不安定
```

**Tableauでの計算：**
```
STDEV([Sales])      # 標準偏差
VAR([Sales])        # 分散
STDEVP([Sales])     # 母標準偏差
```

**品質管理での活用：**
```
管理限界：
上限 = 平均 + 3×標準偏差
下限 = 平均 - 3×標準偏差

// 異常検知
IF ABS([Value] - AVG([Value])) > 3 * STDEV([Value])
THEN "異常" ELSE "正常" END
```

---

## 🔤 T

### 🟪 Table Calculation（テーブル計算）
**定義：** 結果セット内でのみ実行される計算（データベースに影響しない）

**主なテーブル計算：**
```
RUNNING_SUM([Sales])          # 累積合計
WINDOW_AVG([Sales])           # 移動平均  
LOOKUP([Sales], -1)           # 前期値参照
INDEX()                       # 行番号
RANK(SUM([Sales]), 'desc')    # ランキング
PERCENTILE([Sales])           # パーセンタイル
```

**計算の方向と範囲：**
```
方向（Direction）：
- Table Down：上から下
- Table Across：左から右
- Pane Down：パネル内で下方向

範囲（Scope）：
- Table：テーブル全体
- Pane：パネル内
- Cell：セル内
```

**実践例：**
```
// 前年同月比
(SUM([Sales]) - LOOKUP(SUM([Sales]), -12)) / 
LOOKUP(SUM([Sales]), -12)

// 移動平均（3期間）
WINDOW_AVG(SUM([Sales]), -1, 1)

// 累積構成比
RUNNING_SUM(SUM([Sales])) / TOTAL(SUM([Sales]))
```

### 🟨 Tooltip（ツールチップ）
**定義：** マウスオーバー時に表示される詳細情報

**効果的なツールチップ設計：**
```
基本情報：
・カテゴリ名
・メトリクス値  
・単位・通貨

追加コンテキスト：
・前期比較
・全体に対する割合
・関連する他指標

ビジュアル要素：
・スパークライン
・小さなチャート
・色分けされた指標
```

**動的ツールチップ：**
```html
<!-- カスタムツールチップ -->
<b><ATTR(Category)></b>
売上: <AGG(Sales):$#,##0>
利益率: <AGG(Profit Rate):0.0%>

前年比: <AGG(YoY Growth):+0.0%;-0.0%>
<Sheet name="詳細トレンド" maxwidth="300" maxheight="200"/>
```

---

## 🔤 U

### 🟪 Union（ユニオン）
**定義：** 複数のテーブルを縦方向に結合してまとめる操作

**ユニオンの使用場面：**
```
複数月のファイル統合：
sales_2024_01.csv
sales_2024_02.csv  
sales_2024_03.csv
↓ ユニオン
統合された売上データ

複数地域のデータ統合：
sales_east.xlsx
sales_west.xlsx
↓ ユニオン  
全地域の売上データ
```

**ワイルドカードユニオン：**
```
パターンマッチング：
sales_*.csv → 該当する全ファイルを自動統合

新しいファイル追加時：
- 自動的に検出・統合
- スケジュール更新で最新化
```

**注意点：**
```
列名の統一：
✓ 同じ列名で統合
✗ 列順は関係なし

データ型の統一：
✓ 同じデータ型必須
✗ 文字列と数値は統合不可
```

---

## 🔤 V

### 🟩 Variance（分散）
**定義：** データが平均からどれだけ散らばっているかを表す統計量

**分散の計算：**
```
分散 = Σ(各値 - 平均)² / データ数

Tableauでの計算：
VAR([Sales])    # 標本分散
VARP([Sales])   # 母分散
```

**ビジネスでの活用：**
```
売上のばらつき分析：
- 分散が大きい：予測困難、リスク高
- 分散が小さい：安定、予測可能

地域別パフォーマンス：
- 均一な成長：分散小
- 地域格差：分散大
```

---

## 🔤 W

### 🟦 Worksheet（ワークシート）
**定義：** 単一の分析・可視化を作成する作業画面

**ワークシートの構成要素：**
```
シェルフ：
- 列シェルフ：X軸、横方向の分類
- 行シェルフ：Y軸、縦方向の分類  
- マークシェルフ：色、サイズ、形状

フィルターシェルフ：
- ディメンションフィルター
- メジャーフィルター
- 日付フィルター
```

**効率的なワークシート作成：**
```
命名規則：
✓ 01_売上トレンド_月次
✓ 02_地域別_売上構成比
✗ シート1、シート2

構成管理：
- 目的別のグループ化
- 色分けによる分類
- 説明コメントの追加
```

---

## 🎯 実務重要度ランキング

### 🥇 最重要（毎日使用）
1. **Dimension/Measure（ディメンション/メジャー）**
2. **Filter（フィルター）**
3. **Calculated Field（計算フィールド）**
4. **Dashboard（ダッシュボード）**
5. **Aggregation（集計）**

### 🥈 重要（週2-3回使用）
6. **LOD計算**
7. **Parameter（パラメータ）**
8. **Table Calculation（テーブル計算）**
9. **Join（結合）**
10. **Extract（エクストラクト）**

### 🥉 知っておくべき（月数回使用）
11. **Set（セット）**
12. **Blend（ブレンド）**
13. **Tooltip（ツールチップ）**
14. **Actions（アクション）**
15. **Union（ユニオン）**

### 📚 専門知識（必要時に使用）
16. **Regression（回帰分析）**
17. **Standard Deviation（標準偏差）**
18. **Percentile（パーセンタイル）**
19. **Correlation（相関）**
20. **Normal Distribution（正規分布）**

## 💡 効率的な学習方法

### 📖 段階別習得プラン

**Week 1-2: 基礎固め**
```
最重要用語5つを完全習得：
- 実際のデータで練習
- 毎日1つずつ使ってみる
- 同僚に説明できるレベルまで
```

**Week 3-4: 実務応用**
```
重要用語10個を実践で習得：
- 実際のプロジェクトで使用
- 複数の用語を組み合わせて使用
- 問題解決に活用
```

**Month 2: 専門性向上**
```
専門用語を必要に応じて学習：
- 統計分析が必要な時
- 高度な可視化が必要な時
- パフォーマンス問題解決時
```

### 🔄 継続学習のコツ

**用語ログの作成**
```
日付: 2024-01-15
使用した用語: LOD計算、テーブル計算
困った点: FIXEDとINCLUDEの使い分け
解決方法: 具体例で比較学習
次回への活用: 顧客分析で実践
```

**チーム内用語統一**
```
週次ミーティング：
- 新しく学んだ用語の共有
- 用語の使い方のディスカッション
- 困った用語の解決法共有
```

## 🚀 さらなるスキルアップ

### 📚 推奨学習リソース

**書籍**
- 「Tableau実践入門」
- 「データ可視化のデザイン」
- 「統計学入門」

**オンライン**
- Tableau Learning Path
- Coursera Data Visualization
- Udemy Tableau Complete Course

**コミュニティ**
- Tableau User Group
- データビズ勉強会
- 社内Tableau勉強会

---

**この分析用語集が皆さんのTableauスキル向上に役立つことを願っています！** 📊✨

**分からない用語があれば、コメントで質問してください 💬**

#Tableau #データ分析 #用語集 #可視化 #BI #統計学 #新人エンジニア #データサイエンス
